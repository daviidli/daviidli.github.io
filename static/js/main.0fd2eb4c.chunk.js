(this.webpackJsonpdavidli=this.webpackJsonpdavidli||[]).push([[0],{133:function(e,t,n){e.exports=n(327)},151:function(e,t,n){},152:function(e,t,n){},232:function(e,t,n){},244:function(e,t,n){},318:function(e,t,n){},321:function(e,t,n){},322:function(e,t,n){},323:function(e,t,n){},324:function(e,t,n){},326:function(e,t,n){},327:function(e,t,n){"use strict";n.r(t);var a=n(1),o=n.n(a),i=n(9),r=n.n(i),s=n(84),c=n(10),l=n(41),m=n(24),d=n(132),u=n(34),h=n(14),p=n(53),g=(n(148),n(113)),f=(n(150),n(114)),w=(n(151),function(e){var t=e.align,n=e.className,a=e.children;return o.a.createElement("div",{className:n},o.a.createElement(g.a,{className:"content",align:t},o.a.createElement(f.a,{xs:{span:20,offset:2},md:{span:16,offset:4},lg:{span:14,offset:5},xl:{span:10,offset:7},xxl:{span:8,offset:8}},a)))});w.defaultProps={align:"top"};var b=w,v=(n(152),function(){return l.scroller.scrollTo("about",{duration:500,delay:0,smooth:!0,offset:10})}),y=[{icon:o.a.createElement(h.d,{size:"1.75em"}),link:"https://github.com/daviidli",tooltip:"Github"},{icon:o.a.createElement(h.g,{size:"1.75em"}),link:"mailto:david@dvdli.dev",tooltip:"Email"},{icon:o.a.createElement(h.f,{size:"1.75em"}),link:"https://www.linkedin.com/in/daviidli/",tooltip:"LinkedIn"},{icon:o.a.createElement(h.c,{size:"1.75em"}),link:"https://dvdli.dev/resume.pdf",tooltip:"Resume"}],E=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(b,{className:"landing",align:"middle"},o.a.createElement("div",{className:"title"},"hello,"),o.a.createElement("div",{className:"title"},"i'm",o.a.createElement("span",{className:"name"}," david"),"."),o.a.createElement("div",{className:"links"},y.map((function(e){return o.a.createElement(p.a,{key:e.tooltip,content:e.tooltip,position:"bottomMiddle",color:"rgba(0, 0, 0, 0.8)"},o.a.createElement(u.a,{corners:"round",color:"rgba(0,0,0,0)",textColor:"#096dd9",hoverColor:"rgba(0,0,0,0.15)",onClick:function(){return window.open(e.link,"_blank")}},e.icon))})))),o.a.createElement("div",{className:"arrow"},o.a.createElement(u.a,{className:"arrow-container",onClick:v,corners:"round",size:"sm",color:"rgba(0,0,0,0)",textColor:"#555",hoverColor:"rgba(0,0,0,0.15)"},o.a.createElement("div",null,"more"),o.a.createElement(h.a,null))))},k=n(33),I=n.n(k),S=(n(232),function(){return o.a.createElement(b,{className:"about",align:"middle"},o.a.createElement(I.a,{className:"description",source:"I'm a recent graduate from the [University of British Columbia](https://ubc.ca) in Vancouver \ud83c\udf41. My studies were focused on Business and Computer Science. I have a strong interest in both, but am currently focused on learning more about and gaining more experience in software development."}))}),x=(n(233),n(131)),C=(n(109),n(64)),A=n(88),T=(n(328),n(130)),N=n(115),z=n(87),R=(n(244),function(e,t,n){return o.a.createElement(p.a,{key:e,content:e,fullWidth:!0,width:"75px",className:"tooltip"},o.a.createElement(u.a,{onClick:n,width:"100%",height:"100%",size:"lg",textColor:"#096dd9",color:"rgba(255, 255, 255, 0)",hoverColor:"rgba(0, 0, 0, 0.15)",corners:"normal"},t))}),D=function(e){var t=e.title,n=e.description,a=e.content,i=e.github,r=e.link,s=e.setDrawer,c=function(e){return function(){return window.open(e,"_blank")}},l=[];return a&&a.length&&l.push(R("About",o.a.createElement(h.e,null),(function(){return s(a)}))),i&&i.length&&l.push(R("Github",o.a.createElement(h.d,null),c(i))),r&&r.length&&l.push(R("Try it out!",o.a.createElement(N.a,null),c(r))),o.a.createElement(C.b.Item,{className:"item"},o.a.createElement(z.b,{outline:!0,raised:!1,bgColor:"#fff"},o.a.createElement("h1",{className:"title"},t),o.a.createElement(T.a.Paragraph,{className:"description"},n),o.a.createElement(z.a,{justify:"space-evenly"},l)))};D.defaultProps={link:"",content:"",github:""};var j=D,M=[{title:"Corn-UI",description:"Some simple yet customizable React components.",content:"# Corn-UI\n\n`React` `TypeScript`\n\n_Who doesn't like corn \ud83c\udf3d\ud83c\udf3d\ud83c\udf3d_\n\n## Inspiration\n\nI started making these components because I was getting tired of the look of the mainstream React component libraries out there, such as [Material-UI](https://material-ui.com/). Although I really like their API, I felt myself customizing their components every time I used them. Having created a few components for the UI kit at IBM, I thought I would give it another try and create my own from scratch. I quickly found out that the mindset and considerations needed are quite different from developing for my other React projects. I'm still experimenting with considerations such as the design and the ability to customize without CSS. You can view my progress at [bit.dev/daviidli/corn-ui](https://bit.dev/daviidli/corn-ui).",link:"https://bit.dev/daviidli/corn-ui"},{title:"Darts",description:"A darts game for Arduino connected dartboards.",content:"# Darts\n\n`Electron` `React` `Redux` `TypeScript` `Arduino`\n\n## Inspiration\nI was introduced to the world of darts when I was on vacation in Seoul. A few friends and I frequented an arcade near our stay and the main game we played was arcade darts. Since coming back home, I have looked for places to play darts in Vancouver. Finding only a few and wanting to save some money, I decided to buy a used dartboard and hook it up to my Arduino and create my own version of arcade darts.\n\nI initially wanted to just follow this [tutorial](https://www.hackster.io/ricardo-alves/opendarts-homemade-dartboard-machine-2a2914) and use [OpenDarts](https://www.microsoft.com/en-us/p/opendarts/9nblggh42l8n?activetab=pivot:overviewtab), but that was only for Windows. Having never used Electron before, I decided to give it a try and make an open source version of OpenDarts that is cross-platform.\n\n## Implementation\nMy goal was to be able to run this app on Linux, Windows and Mac. I have a lot of experience with React, but had only recently learned Redux. Taking all these into account, I decided to use the [Electron-React-Boilerplate](https://github.com/electron-react-boilerplate/electron-react-boilerplate). I really liked the abstraction of `create-react-app`, wherein it hides most of the configuration details. Electron-react-boilerplate was the closest I found that was similar to `create-react-app` but for Electron.\n\nThe code on the Arduino is simple and treats the dartboard as a matrix keyboard. All the Arduino code was adapted from the [OpenDarts tutorial](https://www.hackster.io/ricardo-alves/opendarts-homemade-dartboard-machine-2a2914). On the Electron side, the [SerialPort package](https://github.com/serialport/node-serialport) was used to receive the Arduino's outputs.\n",github:"https://github.com/daviidli/darts"},{title:"It Depends",description:"A tool for visualizing entity dependencies which cross-cut commit history.",content:"# It Depends\n\n`TypeScript` `React` `d3.js`\n\n## Project prompt\nIt Depends was a group project that was done for an Advanced Software Engineering course at UBC. The goal was to conduct user studies and create a visualization that would be beneficial for learning more about code through some sort of analyses.\n\n## Intent\nWe found that developers often had trouble traversing the information space of a large software systems with extensive revision histories. Looking through a list of commits is time-consuming, and fails to convey information in a form which efficiently communicates information about the system. In our project, we created a visualization which makes it easier for developers and managers to understand the dependencies between entities in a software system across commits.\n\n## How it works\nOur visualization allows the user to select the granularity they wish to analyze: `files`, `classes` or `functions`. We then pull the commit history using the GitHub API and analyze the changes between each entity (based on granularity). The result is then shown in a bi-directional graph, where nodes represent an entity and an arrow from any entity A to another entity B, represent the likelihood of B needing a change when A is changed. The size of each node represented the amount of commits for that entity.\n\n## Visualization v2\nV2 of the visualization uses a matrix to show the relationships between entities. This was done to increase the readability of the visualization when it came to large software systems. Although the original visualization showed all the information we intended, the sheer amount of arrows made it somewhat difficult to read at a glance.\n\n## Contributors\n\n- [Sam Veloso](https://github.com/scveloso)\n- [Slava Uryumtsev](https://github.com/uslava77)\n- [David Li](https://github.com/daviidli)\n- [Kiyomi KH](https://github.com/kiyomih)\n- [James Yoo](https://github.com/jyoo980)",github:"https://github.com/daviidli/it-depends-vis",link:"https://daviidli.github.io/it-depends-vis"},{title:"Typescript.ts",description:"A DSL (domain specific language) for generating TypeScript projects.",content:"# Typescript.ts\n\n`TypeScript`\n\nTypescript.ts is a Domain Specific Language (DSL) that enables developers to generate or bootstrap their TypeScript project structures from scratch using a small grammar. This was created as a group project for Advanced Software Engineering at UBC.\n\n## Implementation\n\nThe DSL file is tokenized and then parsed through an Abstract Syntax Tree (AST). Different files and directories are generated based on which nodes of the AST are reached.\n\n## Contributors\n\n* [Sam Veloso](https://github.com/scveloso)\n* [Slava Uryumtsev](https://github.com/uslava77)\n* [David Li](https://github.com/daviidli)\n* [Kiyomi KH](https://github.com/kiyomih)\n* [James Yoo](https://github.com/jyoo980)",github:"https://github.com/jyoo980/TypeScript.ts",link:""},{title:"InformMi",description:"A tool for getting all sides of the conversation.",content:"# InformMi\n\n`Python` `Node.js` `React`\n\n_Created for IBM intern hackathon 2019_\n\nInformMi allows for users to search a news topic and show articles from the for, against and neutral sides of the conversation. The inspiration came from discussions around the Hong Kong protests at the time and how different news agencies reported on the events.\n\n## Implementation\n\nWe used [News API](https://newsapi.org/) to gather articles on the specified topic, then summarized each one using [TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf). We then took the summaries of each article and used kmeans clustering to generate 3 clusters (for, against and neutral). The front-end then shows the articles in their categorized groups.\n\n## Contributors\n\n- [Carlson Lau](https://github.com/carllau999)\n- [David Li](https://github.com/daviidli)\n- [Rahul Anilkumar](https://github.com/RahulAnilkumar8)",github:"https://github.com/daviidli/News",link:""},{title:"Summary",description:"Browser-based extractive text summarization using TextRank and RAKE.",content:"# Summary\n\n`JavaScript` `React` `Mathjs`\n\nSummary is an extractive text summarization app that was inspired by the summary bots on the [r/worldnews](https://reddit.com/r/worldnews) subreddit. The app implements two summarization techniques TextRank and Rapid Automatic Keyword Extraction (RAKE).\n\n### [TextRank](https://nlpforhackers.io/textrank-text-summarization/)\nUses Google's PageRank algorithm but instead of webpages, it ranks sentences.\nCosine Similarity is used to compute the similarity of sentences.\n\n### [RAKE (Rapid Automatic Keyword Extraction)](https://www.researchgate.net/publication/227988510_Automatic_Keyword_Extraction_from_Individual_Documents)\nMethod for summarization that extracts keywords from text and then computes a score for each word. Each sentence has a score of the sum of its keywords' scores. The sentences are then ranked by the sentence score. This method tends to give preference to longer keywords and longer sentences.\n",github:"https://github.com/daviidli/summary",link:"https://daviidli.github.io/summary"},{title:"Smilee",description:"A side scroller that pays attention to your mood \ud83d\ude00.",content:"# Smilee\n\n`Unity` `C#`\n\n_Created for [NWHacks](https://www.nwhacks.io/) 2017_\n\nSmilee is a endless sidescroller that has a bunny hopping over carrots to avoid dying. Along the way, when you reach certain scores, the game will prompt a camera to appear and take a picture of your face. Based on the facial expression, the game will use [Microsoft's Cognitive Services API](https://azure.microsoft.com/en-us/services/cognitive-services/face/#overview) to retrieve the most prominent emotion. Depending on which emotion is detected, your in-game character will get a special ability.",github:"https://github.com/daviidli/Smilee"}],P=(n(318),function(){var e=Object(a.useState)(""),t=Object(m.a)(e,2),n=t[0],i=t[1],r=0!==n.length;return o.a.createElement(o.a.Fragment,null,o.a.createElement(b,{className:"projects"},o.a.createElement("h2",{className:"section-heading"},"projects"),o.a.createElement(C.b,{grid:{gutter:16,xs:1,sm:1,md:2,lg:2,xl:2,xxl:3},dataSource:M,renderItem:function(e){return j(Object(A.a)(Object(A.a)({},e),{},{setDrawer:i}))}})),o.a.createElement(x.a,{className:"drawer",placement:"bottom",closable:!0,height:"85%",onClose:function(){return i("")},visible:r},o.a.createElement(b,{className:"drawer-container"},o.a.createElement(I.a,{source:n,className:"md"}))))}),W=(n(319),n(39)),B=(n(321),function(){return o.a.createElement(b,{className:"work"},o.a.createElement("h2",{className:"section-heading"},"work experience"),o.a.createElement(W.a,{mode:"left",className:"timeline"},o.a.createElement(W.a.Item,{label:"May 2020",color:"grey"},o.a.createElement("h1",null,"Graduated University \ud83c\udf93 ")),o.a.createElement(W.a.Item,{label:"May 2019 - Sep 2019"},o.a.createElement(I.a,{source:"# Front-end Web Developer\n## @ [IBM](https://www.ibm.com/products/cognos-analytics)\n- Implemented features and fixed defects for IBM's Cognos Analytics web application.\n- Ported and upgraded features from legacy JavaScript front-end frameworks to React components.\n- Created development tools to streamline testing and gatekeeping duties.",className:"md"})),o.a.createElement(W.a.Item,{label:"Sep 2017 - May 2018"},o.a.createElement(I.a,{source:"# Software Development Engineer\n## @ [Sierra Wireless](https://sierrawireless.com)\n- Implemented features to Sierra's hardware API for Windows.\n- Designed and implemented automated static code analysis on Sierra servers during nightly builds.\n- Primarily worked in C++ and C# on Visual Studios.\n",className:"md"})),o.a.createElement(W.a.Item,{label:"Sep 2015",color:"grey"},o.a.createElement("h1",null,"Started University \ud83d\udc76 ")),o.a.createElement(W.a.Item,{dot:o.a.createElement(h.a,{size:"1.35em"}),color:"grey"})))}),L=(n(322),function(){return o.a.createElement(b,{className:"skills"},o.a.createElement("h2",{className:"section-heading"},"key competencies"),o.a.createElement(I.a,{source:"\n### Languages\n| |  |\n|:--|:--|\n| Proficient          | `JavaScript` `TypeScript` `C++` `Java` `C` |\n| Working knowledge   | `Python` `C#` |\n\n\n### Web Technologies\n| Front End |  |\n|:--|:--|\n| Proficient          | `ReactJS` `Redux` `Mobx-State-Tree` `HTML` `CSS` |\n| Working knowledge   | `Electron` `SASS` `Mobx` |\n\n| Back End |  |\n|:--|:--|\n| Proficient          | `Node.js` `REST` |\n| Working knowledge   | `GraphQL` |\n\n| Testing |  |\n|:--|:--|\n| Proficient          | `Jest` `Mocha` `Chai` |\n| Working knowledge   | `Puppeteer` |\n\n### Database\n| |  |\n|:--|:--|\n| Proficient          | `MySQL` |\n\n### Non-Tech\n| |  |\n|:--|:--|\n| Proficient          | `Photoshop` `InDesign` |\n| Working knowledge   | `Illustrator` `After Effects` |"}))}),_=[{name:"david",element:o.a.createElement(E,null)},{name:"about",element:o.a.createElement(S,null)},{name:"projects",element:o.a.createElement(P,null)},{name:"key competencies",element:o.a.createElement(L,null)},{name:"work experience",element:o.a.createElement(B,null)}],U=(n(323),function(){var e=Object(a.useState)(!1),t=Object(m.a)(e,2),n=t[0],i=t[1],r=o.a.createElement(u.a,{color:"#232323",corners:"circle",hoverRaised:!0},o.a.createElement(h.h,null)),s=o.a.createElement(u.a,{color:"#232323",corners:"circle",hoverRaised:!0},o.a.createElement(h.b,null));return o.a.createElement(d.a,{className:"side-drawer",open:n,onOpen:function(){return i(!0)},onClose:function(){return i(!1)},width:280,color:"rgba(255, 255, 255, 0.7)",panelColor:"linear-gradient(#232323, #121212)",openButton:r,closeButton:s},_.map((function(e){return o.a.createElement(l.Link,{className:"link",activeClass:"active",to:e.name,spy:!0,smooth:!0,duration:500,delay:700,isDynamic:!0,key:e.name,onClick:function(){return i(!1)}},o.a.createElement(u.a,{width:"75%",height:"2.5em",corners:"round",textColor:"#fff",color:"rgba(0, 0, 0, 0)",hoverColor:"rgba(255, 255, 255, 0.15)",hoverScale:1.05},e.name))})))}),O=(n(324),function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(U,null),_.map((function(e){return o.a.createElement(l.Element,{key:e.name,name:e.name},e.element)})),o.a.createElement("div",{className:"footer-space"}))}),K=function(){return o.a.createElement(c.c,null,o.a.createElement(c.a,{exact:!0,path:"/"},o.a.createElement(O,null)))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(326);r.a.render(o.a.createElement(s.a,null,o.a.createElement(K,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},[[133,1,2]]]);
//# sourceMappingURL=main.0fd2eb4c.chunk.js.map